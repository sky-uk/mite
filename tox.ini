[tox]
envlist = py39, py310, py311
skipsdist = true

[testenv]
#deps =
#    -r test-requirements.txt
#    -r requirements.txt
commands =
    pip install -r test-requirements.txt
    pip install -r requirements.txt
    pip uninstall -y acurl
    pip install ./acurl
    coverage erase
    pytest -- {posargs}
sitepackages = true
setenv =
    # In principle this (along with evil tricks elsewhere) should let us
    # do line-level profiling of the cython code.  However, it just
    # causes segfaults in the test suite.... =/
    # IS_TOX_BUILD=yes

    # For the line-level profiling to work, we need to reinstall acurl
    # in the venv each time we run the tests.  To do that, we need to
    # install it as a regular package not an editable install.  To do
    # that, tox copies the files (but not the .git directory) to a
    # location in /tmp.  And then setuptools-scm barfs because it can't
    # compute a version.  It's all very old-woman-swallowed-a-fly.
    SETUPTOOLS_SCM_PRETEND_VERSION=0.0

[pytest]
addopts = --cov
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')

[coverage:run]
branch = True
omit =
    acurl/tests/*
    mite/example.py
source =
    acurl
    mite
    mite_http
    mite_browser
    mite_selenium
    mite_amqp
    mite_websocket
    mite_finagle
plugins = Cython.Coverage

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

ignore_errors = True

[coverage:html]
directory = coverage_html_report
