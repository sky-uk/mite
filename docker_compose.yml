version: '3.9'
services:
  apiserver:
    image: python:3.11-alpine3.16
    command: ["python", "-m", "http.server", "8000"]
    ports:
    - "8000:8000"
  runner:
    image: mite:latest
    command: ["mite", "runner", "--controller-socket=tcp://controller:14301", "--message-socket=tcp://duplicator:14302"]
    deploy:
      replicas: 2
    volumes:
      - type: bind
        source: ./local
        target: /mite/local
    environment:
      - API_URL=http://apiserver:8000/
  duplicator:
    image: mite:latest
    command: ["mite", "duplicator", "--message-socket=tcp://0.0.0.0:14302", "tcp://0.0.0.0:14303"]
  stats:
    image: mite:latest
    command: ["mite", "stats", "--stats-in-socket=tcp://duplicator:14303", "--stats-out-socket=tcp://prometheus_exporter:14305", "--stats-include-processors=mite,mite_http"]
    deploy:
      replicas: 1
  prometheus_exporter:
    image: mite:latest
    command: ["mite", "prometheus_exporter", "--stats-out-socket=tcp://0.0.0.0:14305", "--web-address=0.0.0.0:9301"]
  controller:
    image: mite:latest
    command: ["mite", "controller", "--controller-socket=tcp://0.0.0.0:14301", "--message-socket=tcp://duplicator:14302", "local.demo:scenario"]
    depends_on:
      - apiserver
    volumes:
      - type: bind
        source: ./local
        target: /mite/local
    environment:
      - API_URL=http://apiserver:8000/
  prometheus:
    build:
      context: .
      dockerfile: ./prometheus/Dockerfile
    ports:
      - 9090:9090
  grafana:
    build:
      context: .
      dockerfile: ./grafana/Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - prometheus
